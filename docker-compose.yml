version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: forensiq_postgres
    environment:
      POSTGRES_DB: forensiq_db
      POSTGRES_USER: forensiq_user
      POSTGRES_PASSWORD: forensiq_pass_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    networks:
      - forensiq_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U forensiq_user -d forensiq_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # OpenSearch for full-text search
  opensearch:
    image: opensearchproject/opensearch:2.11.0
    container_name: forensiq_opensearch
    environment:
      - cluster.name=forensiq-cluster
      - node.name=forensiq-node
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - forensiq_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # OpenSearch Dashboards (optional, for debugging)
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.0
    container_name: forensiq_dashboards
    ports:
      - "5601:5601"
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"
    networks:
      - forensiq_network
    depends_on:
      opensearch:
        condition: service_healthy

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: forensiq_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - forensiq_network
    command: redis-server --appendonly yes

  # ForensiQ Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: forensiq_backend
    environment:
      - DATABASE_URL=postgresql://forensiq_user:forensiq_pass_2024@postgres:5432/forensiq_db
      - OPENSEARCH_URL=http://opensearch:9200
      - REDIS_URL=redis://redis:6379
      - UPLOAD_DIR=/app/uploads
      - MODEL_CACHE_DIR=/app/models
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - upload_data:/app/uploads
      - model_cache:/app/models
    ports:
      - "8000:8000"
    networks:
      - forensiq_network
    depends_on:
      postgres:
        condition: service_healthy
      opensearch:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # ForensiQ Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: forensiq_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_VERSION=1.0.0
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - forensiq_network
    depends_on:
      - backend
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: forensiq_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
    networks:
      - forensiq_network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  opensearch_data:
    driver: local
  redis_data:
    driver: local
  upload_data:
    driver: local
  model_cache:
    driver: local

networks:
  forensiq_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16